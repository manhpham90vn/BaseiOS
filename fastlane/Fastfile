default_platform(:ios)

platform :ios do
    before_all do
      setup_circle_ci
    end

    desc "Run unit test"
      lane :unittest do
        run_tests(workspace: ENV['WORKSPACE'],
            devices: ["iPhone 13 Pro Max"],
            scheme: ENV['SCHEME'])
      end

    desc "Setup certificate and provisioning profile"
      lane :setup do
        match(type: "appstore", readonly: true)
      end

    desc "Export to testflight"
        lane :export do
            time = Time.new.strftime("%Y_%d_%m_%H_%M_%S")

            app_name = get_xcconfig_value(
              path: ENV['PATH_XCCONFIG'],
              name: 'PRODUCT_NAME'
            )

            identifider = get_xcconfig_value(
              path: ENV['PATH_XCCONFIG'],
              name: 'PRODUCT_BUNDLE_IDENTIFIER'
            )

            version = get_xcconfig_value(
              path: ENV['PATH_XCCONFIG'],
              name: 'BUNDLE_SHORT_VERSION_STRING'
            )

            build_number = get_xcconfig_value(
              path: ENV['PATH_XCCONFIG'],
              name: 'BUNDLE_VERSION'
            )

            build_number = build_number.to_i
            build_number += 1

            update_xcconfig_value(
              path: ENV['PATH_XCCONFIG'],
              name: 'BUNDLE_VERSION',
              value: build_number.to_s
            )

            file = time + "_" + app_name.gsub(' ', '') + "_" + version + "_" + build_number.to_s + ".ipa"

            update_code_signing_settings(
              use_automatic_signing: false,
              path: ENV['XCODEPROJ'],
              team_id: ENV['FASTLANE_TEAM_ID'],
              code_sign_identity: "iPhone Distribution",
            )

            gym(
                workspace: ENV['WORKSPACE'],
                configuration: ENV['CONFIGURATION'],
                scheme: ENV['SCHEME'],
                export_method: "app-store",
                output_directory: "./fastlane/build",
                output_name: file,
                clean: true,
                export_options: {
                    uploadBitcode: false,
                    uploadSymbols: false,
                    compileBitcode: false,
                    provisioningProfiles: { identifider => ENV['PROVISION_NAME'], "signingStyle": "manual" }
                }
            )
            upload_to_testflight(
              app_identifier: identifider,
              skip_submission: true,
              skip_waiting_for_build_processing: true
            )
    end
end
