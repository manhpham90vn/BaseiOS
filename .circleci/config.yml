version: 2.1
jobs:
  build-and-test:
    macos:
      xcode: 14.0.1
    steps:
      - checkout
      - restore_cache:
          keys:
            - &gem-cache gem-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gem-cache-v1-{{ arch }}-{{ .Branch }}
            - gem-cache-v1
      - run: |
          export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ") 
          gem install bundler:$BUNDLER_VERSION      
      - run: |
          bundle config path vendor/bundle
          bundle install --without=documentation --jobs 4 --retry 3
      - save_cache:
          key: *gem-cache
          paths:
            - vendor/bundle
      - run: HOMEBREW_NO_AUTO_UPDATE=1 brew install mint
      - restore_cache:
          name: Restore Mint
          keys:
            - mint-
      - run: |
          mkdir -p Mints/{lib,bin}
          MINT_PATH=Mints/lib MINT_LINK_PATH=Mints/bin mint bootstrap -m Mintfile --link
      - save_cache:
          name: Save Mint
          key: mint-
          paths:
            - ./Mints
      - run: export PATH=$PATH:~/.mint/bin
      - run: make generateSwiftgen
      - run: make generateXcodegen  
      - restore_cache:
          name: Restore CocoaPods
          keys:
            - pods-{{ checksum "Podfile.lock" }}
            - pods-
      - run: bundle exec pod install
      - save_cache:
          name: Save CocoaPods
          key: pods-{{ checksum "Podfile.lock" }}
          paths:
            - ./Pods
      - run:
          name: "Run Unit test"
          command: "bundle exec fastlane unittest --env debug"
  deploy-apple:
    macos:
      xcode: 14.0.1

    steps:
      - checkout
      - run:
          name: "Install"
          command: "make"
      - run:
          name: "Setup Certificate"
          command: "make setupCertificate"
      - run:
          name: "Create P8 API Key"
          command: "echo $APP_STORE_P8 | base64 --decode > AuthKey_6TF3P5J5QY.p8"
      - run:
          name: "Deploy Testflight"
          no_output_timeout: 30m
          command: "make exportTestFlight"
workflows:
  build-and-test-workflow:
    jobs:
      - build-and-test
  deploy-apple:
    jobs:
      - deploy-apple